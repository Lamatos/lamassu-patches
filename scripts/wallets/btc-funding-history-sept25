#!/usr/bin/env bash
set -euo pipefail

CONF="/mnt/blockchains/bitcoin/bitcoin.conf"
OUT="/tmp/btc-funding-history-sep2025.csv"

# Ensure jq is installed
if ! command -v jq &>/dev/null; then
  echo "Installing jq..."
  DEBIAN_FRONTEND=noninteractive apt install -y jq >/dev/null
fi

# Date range (UTC) for September 2025
START=$(date -u -d "2025-09-01 00:00:00" +%s)
END=$(date -u -d "2025-09-30 23:59:59" +%s)

# CSV header
echo "address,amount,txid,time" > "$OUT"

COUNT=1000
SKIP=0

echo "Exporting BTC funding history for September 2025..."
while true; do
  JSON=$(bitcoin-cli -conf="$CONF" listtransactions "*" $COUNT $SKIP true)
  if [[ "$JSON" == "[]" ]]; then
    break
  fi

  # Keep only 'receive' entries within time range, excluding txids that also appear as 'send' (internal change)
  echo "$JSON" | jq -r --argjson START "$START" --argjson END "$END" '
    . as $all
    | ($all | map(select(.category=="send")) | map(.txid) | unique) as $send_txids
    | $all
    | map(select(.category=="receive" and .time >= $START and .time <= $END))
    | map(select( ($send_txids | index(.txid)) | not ))
    | sort_by(.time)
    | .[]
    | "\(.address),\(.amount),\(.txid),\(.time | strftime("%Y-%m-%d %H:%M:%S"))"
  ' >> "$OUT"

  SKIP=$((SKIP + COUNT))
done

echo "âœ… Funding history for September 2025 exported to: $OUT"
